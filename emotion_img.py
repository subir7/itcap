# -*- coding: utf-8 -*-
"""Emotion_img.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h5F-vVNBGT5C1FR0pLjh9reD28wVoE47
"""

#!pip install -qq deepface
#!pip install -qq ultralytics
#!pip install -qq numpy
#!pip install -qq fer
#!pip install --upgrade pillow

#import tensorflow as tf; print(tf.__version__) ## 2.18.0
#import numpy as np; print(np.__version__) ## 1.26.4

import os
from fer import FER
from ultralytics import YOLO
import cv2
import shutil


def emotion_img (img_path):
    #print("##################################")
    if os.path.exists("/caption"):
      shutil.rmtree("/caption")
    # If image_path is a tensor, decode it
    img_path = img_path.numpy().decode('utf-8')
        
    model = YOLO("yolov8l.pt")
    model.to('cuda')
    #frame = cv2.imread(img_path)
    frame = cv2.imread(img_path, cv2.IMREAD_COLOR)
    #frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    result = model.predict(frame, conf=0.40, project="caption", name="img", save_crop=True, classes=0)

    person_crop_path = "/caption/img/crops/person/"

    if os.path.exists(person_crop_path):
    #os.makedirs("/content/" + "inception_model")
    #print(result)
      path = person_crop_path
      dir_list = os.listdir(path)
      #print("Files and directories in '", path, "' :")
      # prints all files
      #print(dir_list)
      emotion = []
      total_analysis = 0
      for imgname in dir_list:

          emotion_detector = FER(mtcnn=True)
          test_img = cv2.imread(path+imgname)
          analysis = emotion_detector.detect_emotions(test_img)
          #print(analysis)
          #print(len(analysis))
          if len(analysis) > 0:
              if len(emotion) == 0:
                  emotion.extend((analysis[0]['emotions']['angry'], analysis[0]['emotions']['disgust'], analysis[0]['emotions']['fear'],
                                analysis[0]['emotions']['happy'], analysis[0]['emotions']['sad'], analysis[0]['emotions']['surprise'],
                                analysis[0]['emotions']['neutral']))
              else:
                  emotion[0] = emotion[0] + analysis[0]['emotions']['angry']
                  emotion[1] = emotion[1] + analysis[0]['emotions']['disgust']
                  emotion[2] = emotion[2] + analysis[0]['emotions']['fear']
                  emotion[3] = emotion[3] + analysis[0]['emotions']['happy']
                  emotion[4] = emotion[4] + analysis[0]['emotions']['sad']
                  emotion[5] = emotion[5] + analysis[0]['emotions']['surprise']
                  emotion[6] = emotion[6] + analysis[0]['emotions']['neutral']

              total_analysis = total_analysis + 1

          #print(analysis[0]['emotions'])

      #print("EMOTIONS", emotion)
      #print(len(dir_list))
      #print(total_analysis)

      #newList = [i/len(dir_list) for i in emotion]
      if total_analysis > 0:
        newList = [round(i/total_analysis,2) for i in emotion]
        #print(newList)
        #index = newList.index(max(newList))
        #print(index, max(newList))

        #shutil.rmtree("/content/caption")

        return max(newList)
      else:
        return 0 # Return 0 if no faces were detected and analyzed

    else:

      return 0 # Return 0 if the person crops directory does not exist

    #!rm -rf /content/caption